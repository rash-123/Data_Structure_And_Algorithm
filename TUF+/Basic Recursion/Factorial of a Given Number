https://takeuforward.org/plus/dsa/beginner-problem/basic-recursion/factorial-of-a-given-number-ii

class Solution {
public:

// Time Complexity O(N) — The function makes N recursive calls to reach the base case, so the time complexity is proportional to the number of recursive calls
// Space Complexity O(N) — The call stack grows with each recursive call, using N stack frames, so the space complexity is proportional to the depth of recursion.
    int factorial(int n) {
        if(n == 0 || n == 1){
            return n;
        }
        return n*factorial(n-1);
    }
};